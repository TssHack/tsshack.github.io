{"version":3,"file":"static/js/main.13abeb88.js","mappings":"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","sources":["src/Home.js","src/Chat.js","src/DarkGPT.js","src/OSJavad.js","src/API.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { View, Text, TouchableOpacity, Linking, Image, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nconst Home = () => {\n    const navigation = useNavigation();\n\n    return (\n        <View style={styles.container}>\n            <Image source={require('../assets/icon.png')} style={styles.appLogo} />\n            <Text style={styles.title}>ChatGPT</Text>\n            <Text style={styles.subtitle}>open source chatbot app</Text>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Chat')}>\n                    <Icon name=\"comments\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>ChatGPT</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('DarkGPT')}>\n                    <Icon name=\"bug\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>DarkGPT</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('OSJavad')}>\n                    <Image source={require('../assets/os.png')} style={styles.profileImage} />\n                    <Text style={styles.buttonText}>Javad Khiabani</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => Linking.openURL('https://myket.ir/app/com.chatgpt.pira')}>\n                    <Icon name=\"android\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>Android App</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.button} onPress={() => Linking.openURL('https://myket.ir/app/com.osjavad')}>\n                    <Icon name=\"android\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>OSJavad App</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('API')}>\n                    <Icon name=\"code\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>API Docs</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.button} onPress={() => Linking.openURL('https://github.com/ReactMVC')}>\n                    <Icon name=\"github\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>Github Page</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.button} onPress={() => Linking.openURL('https://t.me/h3dev')}>\n                    <Icon name=\"telegram\" size={20} color=\"#000\" />\n                    <Text style={styles.buttonText}>Telegram Contact</Text>\n                </TouchableOpacity>\n            </View>\n\n            <Text style={styles.footer}>Developer: Hossein Pira</Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#fff',\n    },\n    title: {\n        fontSize: 30,\n        marginTop: '10px',\n        fontWeight: 'bold',\n    },\n    subtitle: {\n        fontSize: 20,\n        marginTop: '8px',\n        color: '#666',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 20,\n    },\n    button: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        padding: 10,\n        borderRadius: 20,\n        backgroundColor: '#ddd',\n        marginHorizontal: 10,\n    },\n    buttonText: {\n        fontSize: 20,\n        marginLeft: 10,\n    },\n    footer: {\n        position: 'absolute',\n        bottom: 10,\n    },\n    profileImage: {\n        width: 40,\n        height: 40,\n        borderRadius: 25,\n        marginRight: 2,\n    },\n    appLogo: {\n        width: 70,\n        height: 70,\n        borderRadius: 25,\n        marginRight: 2,\n    },\n});\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity, ActivityIndicator, Image } from 'react-native';\nimport { GiftedChat, Bubble, Send, Time, InputToolbar, Composer } from 'react-native-gifted-chat';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport localForage from 'localforage';\n\nexport default function Chat() {\n  const [messages, setMessages] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    retrieveMessages();\n  }, []);\n\n  useEffect(() => {\n    storeMessages(messages);\n  }, [messages]);\n\n  const retrieveMessages = async () => {\n    try {\n      const storedMessages = await localForage.getItem('messages');\n      if (storedMessages !== null) {\n        setMessages(storedMessages);\n      }\n    } catch (error) {\n      console.error('Failed to retrieve messages', error);\n    }\n  };\n\n  const storeMessages = async (messages) => {\n    try {\n      await localForage.setItem('messages', messages);\n    } catch (error) {\n      console.error('Failed to store messages', error);\n    }\n  };\n\n  const onSend = async (newMessages = []) => {\n    if (newMessages[0].text.trim() === '') {\n      alert('Message cannot be empty');\n      return;\n    }\n\n    setIsLoading(true);\n    setMessages(previousMessages => GiftedChat.append(previousMessages, newMessages));\n\n    try {\n      const response = await fetch('https://chatgpt-api3.onrender.com/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json; charset=UTF-8',\n        },\n        body: JSON.stringify({ text: newMessages[0].text }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        const botResponse = {\n          _id: Math.random().toString(36).substring(7),\n          text: data.message,\n          createdAt: new Date().toISOString(),\n          user: {\n            _id: 2,\n            name: 'ChatGPT',\n            avatar: require('../assets/icon.png'),\n          },\n        };\n        setIsLoading(false);\n        setMessages(previousMessages => GiftedChat.append(previousMessages, botResponse));\n      } else {\n        throw new Error('Failed to get response from chatbot');\n      }\n    } catch (error) {\n      setIsLoading(false);\n      alert('Error: ' + error.message);\n      const errorMessage = {\n        _id: Math.random().toString(36).substring(7),\n        text: 'Failed to send message. Please try again.',\n        createdAt: new Date().toISOString(),\n        user: {\n          _id: 2,\n          name: 'ChatGPT',\n          avatar: require('../assets/icon.png'),\n        },\n      };\n      setMessages(previousMessages => GiftedChat.append(previousMessages, errorMessage));\n    }\n  };\n\n  const deleteChat = () => {\n    const confirmation = window.confirm('Are you sure you want to delete this chat?');\n    if (confirmation) {\n      try {\n        localForage.removeItem('messages').then(() => {\n          setMessages([]);\n        }).catch((error) => {\n          console.error('Failed to delete chat', error);\n        });\n      } catch (error) {\n        console.error('Failed to delete chat', error);\n      }\n    }\n  };\n\n  const renderBubble = (props) => {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: '#000',\n          },\n        }}\n        textStyle={{\n          right: {\n            color: '#fff',\n          },\n        }}\n        timeTextStyle={{\n          right: {\n            color: 'rgba(255,255,255,0.5)',\n          },\n        }}\n      />\n    );\n  };\n\n  const renderSend = (props) => {\n    return (\n      <Send {...props}>\n        <View style={styles.sendingContainer}>\n          <ActivityIndicator size=\"small\" color=\"#007aff\" />\n        </View>\n      </Send>\n    );\n  };\n\n  const renderLoading = () => {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#007aff\" />\n      </View>\n    );\n  };\n\n  const renderTime = (props) => (\n    <Time\n      {...props}\n      timeTextStyle={{\n        left: {\n          color: 'grey',\n        },\n        right: {\n          color: 'grey',\n        },\n      }}\n      format='HH:mm'\n    />\n  );\n\n  const renderInputToolbar = (props) => (\n    <InputToolbar\n      {...props}\n      containerStyle={{\n        backgroundColor: '#fff',\n        borderTopColor: '#000',\n        borderTopWidth: 1,\n      }}\n    />\n  );\n\n  const renderComposer = (props) => (\n    <Composer\n      {...props}\n      textInputStyle={{\n        color: '#000',\n        backgroundColor: '#f0f0f0',\n        paddingTop: 12,\n        paddingBottom: 12,\n        paddingHorizontal: 12,\n        marginLeft: 0,\n      }}\n    />\n  );\n\n  return (\n    <View style={[styles.container, { backgroundColor: '#fff' }]}>\n      <View style={styles.header}>\n        <Image source={require('../assets/icon.png')} style={styles.profileImage} />\n        <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n          <TouchableOpacity onPress={deleteChat}>\n            <Icon name=\"trash-outline\" size={24} color={'#000'} />\n          </TouchableOpacity>\n        </View>\n      </View>\n      <GiftedChat\n        messages={messages}\n        onSend={newMessages => onSend(newMessages)}\n        user={{\n          _id: 1,\n        }}\n        renderBubble={renderBubble}\n        renderSend={isLoading ? renderSend : null}\n        renderLoading={renderLoading}\n        renderTime={renderTime}\n        renderInputToolbar={renderInputToolbar}\n        renderComposer={renderComposer}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n  },\n  loadingContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  sendingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  profileImage: {\n    width: 25,\n    height: 25,\n    borderRadius: 25,\n    marginRight: 2,\n  },\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity, ActivityIndicator, Image } from 'react-native';\nimport { GiftedChat, Bubble, Send, Time, InputToolbar, Composer } from 'react-native-gifted-chat';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport localForage from 'localforage';\n\nexport default function DarkGPT() {\n    const [messages, setMessages] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        retrieveMessages();\n    }, []);\n\n    useEffect(() => {\n        storeMessages(messages);\n    }, [messages]);\n\n    const retrieveMessages = async () => {\n        try {\n            const storedMessages = await localForage.getItem('darkmessages');\n            if (storedMessages !== null) {\n                setMessages(storedMessages);\n            }\n        } catch (error) {\n            console.error('Failed to retrieve messages', error);\n        }\n    };\n\n    const storeMessages = async (messages) => {\n        try {\n            await localForage.setItem('darkmessages', messages);\n        } catch (error) {\n            console.error('Failed to store messages', error);\n        }\n    };\n\n    const onSend = async (newMessages = []) => {\n        if (newMessages[0].text.trim() === '') {\n            alert('Message cannot be empty');\n            return;\n        }\n\n        setIsLoading(true);\n        setMessages(previousMessages => GiftedChat.append(previousMessages, newMessages));\n\n        try {\n            const response = await fetch('https://chatgpt-darkapi2.onrender.com/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json; charset=UTF-8',\n                },\n                body: JSON.stringify({ text: newMessages[0].text }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                const botResponse = {\n                    _id: Math.random().toString(36).substring(7),\n                    text: data.message,\n                    createdAt: new Date().toISOString(),\n                    user: {\n                        _id: 2,\n                        name: 'ChatGPT',\n                        avatar: require('../assets/evil.png'),\n                    },\n                };\n                setIsLoading(false);\n                setMessages(previousMessages => GiftedChat.append(previousMessages, botResponse));\n            } else {\n                throw new Error('Failed to get response from chatbot');\n            }\n        } catch (error) {\n            setIsLoading(false);\n            alert('Error: ' + error.message);\n            const errorMessage = {\n                _id: Math.random().toString(36).substring(7),\n                text: 'Failed to send message. Please try again.',\n                createdAt: new Date().toISOString(),\n                user: {\n                    _id: 2,\n                    name: 'ChatGPT',\n                    avatar: require('../assets/evil.png'),\n                },\n            };\n            setMessages(previousMessages => GiftedChat.append(previousMessages, errorMessage));\n        }\n    };\n\n    const deleteChat = () => {\n        const confirmation = window.confirm('Are you sure you want to delete this chat?');\n        if (confirmation) {\n            try {\n                localForage.removeItem('darkmessages').then(() => {\n                    setMessages([]);\n                }).catch((error) => {\n                    console.error('Failed to delete chat', error);\n                });\n            } catch (error) {\n                console.error('Failed to delete chat', error);\n            }\n        }\n    };\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                wrapperStyle={{\n                    right: {\n                        backgroundColor: '#000',\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: '#fff',\n                    },\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgba(255,255,255,0.5)',\n                    },\n                }}\n            />\n        );\n    };\n\n    const renderSend = (props) => {\n        return (\n            <Send {...props}>\n                <View style={styles.sendingContainer}>\n                    <ActivityIndicator size=\"small\" color=\"#007aff\" />\n                </View>\n            </Send>\n        );\n    };\n\n    const renderLoading = () => {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#007aff\" />\n            </View>\n        );\n    };\n\n    const renderTime = (props) => (\n        <Time\n            {...props}\n            timeTextStyle={{\n                left: {\n                    color: 'grey',\n                },\n                right: {\n                    color: 'grey',\n                },\n            }}\n            format='HH:mm'\n        />\n    );\n\n    const renderInputToolbar = (props) => (\n        <InputToolbar\n            {...props}\n            containerStyle={{\n                backgroundColor: '#fff',\n                borderTopColor: '#000',\n                borderTopWidth: 1,\n            }}\n        />\n    );\n\n    const renderComposer = (props) => (\n        <Composer\n            {...props}\n            textInputStyle={{\n                color: '#000',\n                backgroundColor: '#f0f0f0',\n                paddingTop: 12,\n                paddingBottom: 12,\n                paddingHorizontal: 12,\n                marginLeft: 0,\n            }}\n        />\n    );\n\n    return (\n        <View style={[styles.container, { backgroundColor: '#fff' }]}>\n            <View style={styles.header}>\n            <Image source={require('../assets/evil.png')} style={styles.profileImage} />\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <TouchableOpacity onPress={deleteChat}>\n                        <Icon name=\"trash-outline\" size={24} color={'#000'} />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <GiftedChat\n                messages={messages}\n                onSend={newMessages => onSend(newMessages)}\n                user={{\n                    _id: 1,\n                }}\n                renderBubble={renderBubble}\n                renderSend={isLoading ? renderSend : null}\n                renderLoading={renderLoading}\n                renderTime={renderTime}\n                renderInputToolbar={renderInputToolbar}\n                renderComposer={renderComposer}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n    },\n    loadingContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    sendingContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    profileImage: {\n        width: 25,\n        height: 25,\n        borderRadius: 25,\n        marginRight: 2,\n    },\n});","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, View, TouchableOpacity, ActivityIndicator, Image } from 'react-native';\nimport { GiftedChat, Bubble, Send, Time, InputToolbar, Composer } from 'react-native-gifted-chat';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport localForage from 'localforage';\n\nexport default function OSJavad() {\n    const [messages, setMessages] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        retrieveMessages();\n    }, []);\n\n    useEffect(() => {\n        storeMessages(messages);\n    }, [messages]);\n\n    const retrieveMessages = async () => {\n        try {\n            const storedMessages = await localForage.getItem('osmessages');\n            if (storedMessages !== null) {\n                setMessages(storedMessages);\n            }\n        } catch (error) {\n            console.error('Failed to retrieve messages', error);\n        }\n    };\n\n    const storeMessages = async (messages) => {\n        try {\n            await localForage.setItem('osmessages', messages);\n        } catch (error) {\n            console.error('Failed to store messages', error);\n        }\n    };\n\n    const onSend = async (newMessages = []) => {\n        if (newMessages[0].text.trim() === '') {\n            alert('Message cannot be empty');\n            return;\n        }\n\n        setIsLoading(true);\n        setMessages(previousMessages => GiftedChat.append(previousMessages, newMessages));\n\n        try {\n            const response = await fetch('https://os-javad.onrender.com/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json; charset=UTF-8',\n                },\n                body: JSON.stringify({ text: newMessages[0].text }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                const botResponse = {\n                    _id: Math.random().toString(36).substring(7),\n                    text: data.message,\n                    createdAt: new Date().toISOString(),\n                    user: {\n                        _id: 2,\n                        name: 'ChatGPT',\n                        avatar: require('../assets/os.png'),\n                    },\n                };\n                setIsLoading(false);\n                setMessages(previousMessages => GiftedChat.append(previousMessages, botResponse));\n            } else {\n                throw new Error('Failed to get response from chatbot');\n            }\n        } catch (error) {\n            setIsLoading(false);\n            alert('Error: ' + error.message);\n            const errorMessage = {\n                _id: Math.random().toString(36).substring(7),\n                text: 'Failed to send message. Please try again.',\n                createdAt: new Date().toISOString(),\n                user: {\n                    _id: 2,\n                    name: 'ChatGPT',\n                    avatar: require('../assets/os.png'),\n                },\n            };\n            setMessages(previousMessages => GiftedChat.append(previousMessages, errorMessage));\n        }\n    };\n\n    const deleteChat = () => {\n        const confirmation = window.confirm('Are you sure you want to delete this chat?');\n        if (confirmation) {\n            try {\n                localForage.removeItem('osmessages').then(() => {\n                    setMessages([]);\n                }).catch((error) => {\n                    console.error('Failed to delete chat', error);\n                });\n            } catch (error) {\n                console.error('Failed to delete chat', error);\n            }\n        }\n    };\n\n    const renderBubble = (props) => {\n        return (\n            <Bubble\n                {...props}\n                wrapperStyle={{\n                    right: {\n                        backgroundColor: '#000',\n                    },\n                }}\n                textStyle={{\n                    right: {\n                        color: '#fff',\n                    },\n                }}\n                timeTextStyle={{\n                    right: {\n                        color: 'rgba(255,255,255,0.5)',\n                    },\n                }}\n            />\n        );\n    };\n\n    const renderSend = (props) => {\n        return (\n            <Send {...props}>\n                <View style={styles.sendingContainer}>\n                    <ActivityIndicator size=\"small\" color=\"#007aff\" />\n                </View>\n            </Send>\n        );\n    };\n\n    const renderLoading = () => {\n        return (\n            <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color=\"#007aff\" />\n            </View>\n        );\n    };\n\n    const renderTime = (props) => (\n        <Time\n            {...props}\n            timeTextStyle={{\n                left: {\n                    color: 'grey',\n                },\n                right: {\n                    color: 'grey',\n                },\n            }}\n            format='HH:mm'\n        />\n    );\n\n    const renderInputToolbar = (props) => (\n        <InputToolbar\n            {...props}\n            containerStyle={{\n                backgroundColor: '#fff',\n                borderTopColor: '#000',\n                borderTopWidth: 1,\n            }}\n        />\n    );\n\n    const renderComposer = (props) => (\n        <Composer\n            {...props}\n            textInputStyle={{\n                color: '#000',\n                backgroundColor: '#f0f0f0',\n                paddingTop: 12,\n                paddingBottom: 12,\n                paddingHorizontal: 12,\n                marginLeft: 0,\n            }}\n        />\n    );\n\n    return (\n        <View style={[styles.container, { backgroundColor: '#fff' }]}>\n            <View style={styles.header}>\n                <Image source={require('../assets/os.png')} style={styles.profileImage} />\n                <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                    <TouchableOpacity onPress={deleteChat}>\n                        <Icon name=\"trash-outline\" size={24} color={'#000'} />\n                    </TouchableOpacity>\n                </View>\n            </View>\n            <GiftedChat\n                messages={messages}\n                onSend={newMessages => onSend(newMessages)}\n                user={{\n                    _id: 1,\n                }}\n                renderBubble={renderBubble}\n                renderSend={isLoading ? renderSend : null}\n                renderLoading={renderLoading}\n                renderTime={renderTime}\n                renderInputToolbar={renderInputToolbar}\n                renderComposer={renderComposer}\n            />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    header: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: 10,\n        borderBottomWidth: 1,\n        borderBottomColor: '#ccc',\n    },\n    loadingContainer: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    sendingContainer: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    profileImage: {\n        width: 25,\n        height: 25,\n        borderRadius: 25,\n        marginRight: 2,\n    },\n});","import React from 'react';\nimport { Text, View, StyleSheet } from 'react-native';\nimport { Button, Card, Title, Paragraph } from 'react-native-paper';\nimport Clipboard from '@react-native-clipboard/clipboard';\n\nconst APICard = ({ endpoint, method, headers, body }) => {\n    const copyToClipboard = () => {\n        const apiData = `Endpoint: ${endpoint}\\nMethod: ${method}\\nHeaders: ${JSON.stringify(headers, null, 2)}\\nBody: ${JSON.stringify(body, null, 2)}`;\n        if (typeof navigator !== 'undefined' && navigator.clipboard) {\n            navigator.clipboard.writeText(apiData).then(function () {\n                alert(\"API data copied to clipboard!\");\n            }).catch(function (err) {\n                alert('Could not copy text: ', err);\n            });\n        } else {\n            Clipboard.setString(apiData);\n            alert(\"API data copied to clipboard!\");\n        }\n    };\n\n\n    return (\n        <Card style={styles.card}>\n            <Card.Content>\n                <Title style={styles.endpoint}>Endpoint: {endpoint}</Title>\n                <Paragraph style={styles.method}>Method: {method}</Paragraph>\n                <Paragraph style={styles.headers}>Headers: {JSON.stringify(headers, null, 2)}</Paragraph>\n                <Paragraph style={styles.body}>Body: {JSON.stringify(body, null, 2)}</Paragraph>\n                <Button mode=\"contained\" onPress={copyToClipboard} style={{ alignSelf: 'flex-start', marginTop: 10 }}>Copy API</Button>\n            </Card.Content>\n        </Card>\n    );\n};\n\n\nexport default function API() {\n\n    const apiData = {\n        endpoint: 'https://chatgpt-api3.onrender.com',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: {\n            \"text\": \"Hello ChatGPT\"\n        },\n    };\n\n    const evilData = {\n        endpoint: 'https://chatgpt-darkapi2.onrender.com',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json; charset=utf-8',\n        },\n        body: {\n            \"text\": \"Hello DarkGPT\"\n        },\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>ChatGPT 3.5 API</Text>\n            <APICard {...apiData} />\n            <Text style={styles.title}>ChatGPT Evil API</Text>\n            <APICard {...evilData} />\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    card: {\n        margin: 16,\n        backgroundColor: '#ffffff',\n        borderRadius: 8,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.3,\n        shadowRadius: 2,\n        elevation: 5,\n    },\n    title: {\n        fontSize: 24,\n        fontWeight: 'bold',\n        marginVertical: 10,\n        color: '#333',\n    },\n    endpoint: {\n        color: '#1976d2',\n        fontFamily: 'monospace',\n    },\n    method: {\n        color: '#388e3c',\n        fontFamily: 'monospace',\n    },\n    headers: {\n        color: '#f57c00',\n        fontFamily: 'monospace',\n    },\n    body: {\n        color: '#5d4037',\n        fontFamily: 'monospace',\n    },\n});\n","import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Home from './src/Home';\nimport Chat from './src/Chat';\nimport DarkGPT from './src/DarkGPT';\nimport OSJavad from './src/OSJavad';\nimport API from './src/API';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen\n          name=\"Home\"\n          component={Home}\n          options={{ title: 'Home Page' }}\n        />\n        <Stack.Screen\n          name=\"Chat\"\n          component={Chat}\n          options={{ title: 'ChatGPT' }}\n        />\n        <Stack.Screen\n          name=\"DarkGPT\"\n          component={DarkGPT}\n          options={{ title: 'DarkGPT - Evil ChatGPT' }}\n        />\n        <Stack.Screen\n          name=\"OSJavad\"\n          component={OSJavad}\n          options={{ title: 'Javad Khiabani' }}\n        />\n        <Stack.Screen\n          name=\"API\"\n          component={API}\n          options={{ title: 'API Docs' }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n};\n\nexport default App;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [952], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","container","flex","justifyContent","alignItems","backgroundColor","title","fontSize","marginTop","fontWeight","subtitle","color","buttonContainer","flexDirection","button","padding","borderRadius","marginHorizontal","buttonText","marginLeft","footer","position","bottom","profileImage","width","height","marginRight","appLogo","navigation","useNavigation","_jsxs","View","style","children","_jsx","Image","source","require","Text","TouchableOpacity","onPress","navigate","Icon","name","size","Linking","openURL","Chat","_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","isLoading","setIsLoading","useEffect","retrieveMessages","storeMessages","_ref","_asyncToGenerator","storedMessages","localForage","error","console","apply","arguments","_ref2","_x","onSend","_ref3","newMessages","length","undefined","text","trim","previousMessages","GiftedChat","append","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","botResponse","_id","Math","random","toString","substring","message","createdAt","Date","toISOString","user","avatar","alert","errorMessage","header","window","confirm","then","catch","renderBubble","props","Bubble","_objectSpread","wrapperStyle","right","textStyle","timeTextStyle","renderSend","Send","sendingContainer","ActivityIndicator","renderLoading","loadingContainer","renderTime","Time","left","format","renderInputToolbar","InputToolbar","containerStyle","borderTopColor","borderTopWidth","renderComposer","Composer","textInputStyle","paddingTop","paddingBottom","paddingHorizontal","borderBottomWidth","borderBottomColor","DarkGPT","OSJavad","APICard","endpoint","Card","card","Content","Title","Paragraph","Button","mode","apiData","navigator","clipboard","writeText","err","Clipboard","setString","alignSelf","API","margin","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginVertical","fontFamily","Stack","createStackNavigator","NavigationContainer","Navigator","initialRouteName","Screen","component","Home","options","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","value","this","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}